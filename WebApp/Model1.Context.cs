//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApp
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ms2Entities2 : DbContext
    {
        public ms2Entities2()
            : base("name=ms2Entities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Club> Clubs { get; set; }
        public virtual DbSet<ClubRepresentative> ClubRepresentatives { get; set; }
        public virtual DbSet<Fan> Fans { get; set; }
        public virtual DbSet<HostRequest> HostRequests { get; set; }
        public virtual DbSet<Match> Matches { get; set; }
        public virtual DbSet<SportsAssManager> SportsAssManagers { get; set; }
        public virtual DbSet<Stadium> Stadia { get; set; }
        public virtual DbSet<StadiumManager> StadiumManagers { get; set; }
        public virtual DbSet<SystemAdmin> SystemAdmins { get; set; }
        public virtual DbSet<SystemUser> SystemUsers { get; set; }
        public virtual DbSet<Ticket> Tickets { get; set; }
        public virtual DbSet<allFan> allFans { get; set; }
    
        [DbFunction("ms2Entities2", "allPendingRequests")]
        public virtual IQueryable<allPendingRequests_Result> allPendingRequests(string stadMUsername)
        {
            var stadMUsernameParameter = stadMUsername != null ?
                new ObjectParameter("stadMUsername", stadMUsername) :
                new ObjectParameter("stadMUsername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<allPendingRequests_Result>("[ms2Entities2].[allPendingRequests](@stadMUsername)", stadMUsernameParameter);
        }
    
        [DbFunction("ms2Entities2", "allUnassignedMatches")]
        public virtual IQueryable<allUnassignedMatches_Result> allUnassignedMatches(string hostName)
        {
            var hostNameParameter = hostName != null ?
                new ObjectParameter("hostName", hostName) :
                new ObjectParameter("hostName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<allUnassignedMatches_Result>("[ms2Entities2].[allUnassignedMatches](@hostName)", hostNameParameter);
        }
    
        [DbFunction("ms2Entities2", "availableMatchesToAttend")]
        public virtual IQueryable<availableMatchesToAttend_Result> availableMatchesToAttend(Nullable<System.DateTime> startTime)
        {
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<availableMatchesToAttend_Result>("[ms2Entities2].[availableMatchesToAttend](@StartTime)", startTimeParameter);
        }
    
        [DbFunction("ms2Entities2", "stadiumsNeverPlayedOn")]
        public virtual IQueryable<stadiumsNeverPlayedOn_Result> stadiumsNeverPlayedOn(string clubName)
        {
            var clubNameParameter = clubName != null ?
                new ObjectParameter("clubName", clubName) :
                new ObjectParameter("clubName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<stadiumsNeverPlayedOn_Result>("[ms2Entities2].[stadiumsNeverPlayedOn](@clubName)", clubNameParameter);
        }
    
        [DbFunction("ms2Entities2", "upcomingMatchesOfClub")]
        public virtual IQueryable<upcomingMatchesOfClub_Result> upcomingMatchesOfClub(string clubName)
        {
            var clubNameParameter = clubName != null ?
                new ObjectParameter("clubName", clubName) :
                new ObjectParameter("clubName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<upcomingMatchesOfClub_Result>("[ms2Entities2].[upcomingMatchesOfClub](@clubName)", clubNameParameter);
        }
    
        [DbFunction("ms2Entities2", "viewAvailableStadiumsOn")]
        public virtual IQueryable<viewAvailableStadiumsOn_Result> viewAvailableStadiumsOn(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<viewAvailableStadiumsOn_Result>("[ms2Entities2].[viewAvailableStadiumsOn](@date)", dateParameter);
        }
    
        public virtual int acceptRequest(string stadMUsername, string hostClub, string guestClub, Nullable<System.DateTime> startTime)
        {
            var stadMUsernameParameter = stadMUsername != null ?
                new ObjectParameter("stadMUsername", stadMUsername) :
                new ObjectParameter("stadMUsername", typeof(string));
    
            var hostClubParameter = hostClub != null ?
                new ObjectParameter("hostClub", hostClub) :
                new ObjectParameter("hostClub", typeof(string));
    
            var guestClubParameter = guestClub != null ?
                new ObjectParameter("guestClub", guestClub) :
                new ObjectParameter("guestClub", typeof(string));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("startTime", startTime) :
                new ObjectParameter("startTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("acceptRequest", stadMUsernameParameter, hostClubParameter, guestClubParameter, startTimeParameter);
        }
    
        public virtual int addAssociationManager(string name, string username, string password)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addAssociationManager", nameParameter, usernameParameter, passwordParameter);
        }
    
        public virtual int addClub(string clubName, string clubLocation)
        {
            var clubNameParameter = clubName != null ?
                new ObjectParameter("clubName", clubName) :
                new ObjectParameter("clubName", typeof(string));
    
            var clubLocationParameter = clubLocation != null ?
                new ObjectParameter("clubLocation", clubLocation) :
                new ObjectParameter("clubLocation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addClub", clubNameParameter, clubLocationParameter);
        }
    
        public virtual int addFan(string name, string username, string password, Nullable<int> nationalID, Nullable<System.DateTime> birthday, string address, Nullable<int> phone)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var nationalIDParameter = nationalID.HasValue ?
                new ObjectParameter("nationalID", nationalID) :
                new ObjectParameter("nationalID", typeof(int));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("birthday", birthday) :
                new ObjectParameter("birthday", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addFan", nameParameter, usernameParameter, passwordParameter, nationalIDParameter, birthdayParameter, addressParameter, phoneParameter);
        }
    
        public virtual int addHostRequest(string clubName, string stadiumName, Nullable<System.DateTime> time)
        {
            var clubNameParameter = clubName != null ?
                new ObjectParameter("clubName", clubName) :
                new ObjectParameter("clubName", typeof(string));
    
            var stadiumNameParameter = stadiumName != null ?
                new ObjectParameter("stadiumName", stadiumName) :
                new ObjectParameter("stadiumName", typeof(string));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("time", time) :
                new ObjectParameter("time", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addHostRequest", clubNameParameter, stadiumNameParameter, timeParameter);
        }
    
        public virtual int addNewMatch(string host_club, string guest_club, Nullable<System.DateTime> start_time, Nullable<System.DateTime> end_time)
        {
            var host_clubParameter = host_club != null ?
                new ObjectParameter("host_club", host_club) :
                new ObjectParameter("host_club", typeof(string));
    
            var guest_clubParameter = guest_club != null ?
                new ObjectParameter("guest_club", guest_club) :
                new ObjectParameter("guest_club", typeof(string));
    
            var start_timeParameter = start_time.HasValue ?
                new ObjectParameter("start_time", start_time) :
                new ObjectParameter("start_time", typeof(System.DateTime));
    
            var end_timeParameter = end_time.HasValue ?
                new ObjectParameter("end_time", end_time) :
                new ObjectParameter("end_time", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addNewMatch", host_clubParameter, guest_clubParameter, start_timeParameter, end_timeParameter);
        }
    
        public virtual int addRepresentative(string name, string clubName, string username, string password)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var clubNameParameter = clubName != null ?
                new ObjectParameter("clubName", clubName) :
                new ObjectParameter("clubName", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addRepresentative", nameParameter, clubNameParameter, usernameParameter, passwordParameter);
        }
    
        public virtual int addStadium(string name, string location, Nullable<int> capacity)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var capacityParameter = capacity.HasValue ?
                new ObjectParameter("capacity", capacity) :
                new ObjectParameter("capacity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addStadium", nameParameter, locationParameter, capacityParameter);
        }
    
        public virtual int addStadiumManager(string name, string stadiumName, string username, string password)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var stadiumNameParameter = stadiumName != null ?
                new ObjectParameter("stadiumName", stadiumName) :
                new ObjectParameter("stadiumName", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addStadiumManager", nameParameter, stadiumNameParameter, usernameParameter, passwordParameter);
        }
    
        public virtual int addTicket(string hostName, string guestName, Nullable<System.DateTime> startTime)
        {
            var hostNameParameter = hostName != null ?
                new ObjectParameter("hostName", hostName) :
                new ObjectParameter("hostName", typeof(string));
    
            var guestNameParameter = guestName != null ?
                new ObjectParameter("guestName", guestName) :
                new ObjectParameter("guestName", typeof(string));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("startTime", startTime) :
                new ObjectParameter("startTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addTicket", hostNameParameter, guestNameParameter, startTimeParameter);
        }
    
        public virtual int blockFan(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("blockFan", idParameter);
        }
    
        public virtual int clearAllTables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("clearAllTables");
        }
    
        public virtual int clubWithTheMostSoldTickets(ObjectParameter output)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("clubWithTheMostSoldTickets", output);
        }
    
        public virtual int createAllTables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("createAllTables");
        }
    
        public virtual int deleteClub(string clubName)
        {
            var clubNameParameter = clubName != null ?
                new ObjectParameter("clubName", clubName) :
                new ObjectParameter("clubName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteClub", clubNameParameter);
        }
    
        public virtual int deleteMatch(string hostClub, string guestClub)
        {
            var hostClubParameter = hostClub != null ?
                new ObjectParameter("hostClub", hostClub) :
                new ObjectParameter("hostClub", typeof(string));
    
            var guestClubParameter = guestClub != null ?
                new ObjectParameter("guestClub", guestClub) :
                new ObjectParameter("guestClub", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteMatch", hostClubParameter, guestClubParameter);
        }
    
        public virtual int deleteMatchesOn(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteMatchesOn", dateParameter);
        }
    
        public virtual int deleteMatchesOnStadium(string stadiumName)
        {
            var stadiumNameParameter = stadiumName != null ?
                new ObjectParameter("StadiumName", stadiumName) :
                new ObjectParameter("StadiumName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteMatchesOnStadium", stadiumNameParameter);
        }
    
        public virtual int deleteStadium(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteStadium", nameParameter);
        }
    
        public virtual int dropAllProceduresFunctionsViews()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dropAllProceduresFunctionsViews");
        }
    
        public virtual int dropAllTables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dropAllTables");
        }
    
        public virtual int purchaseTicket(string nationalID, string hostClub, string guestClub, Nullable<System.DateTime> startTime)
        {
            var nationalIDParameter = nationalID != null ?
                new ObjectParameter("nationalID", nationalID) :
                new ObjectParameter("nationalID", typeof(string));
    
            var hostClubParameter = hostClub != null ?
                new ObjectParameter("hostClub", hostClub) :
                new ObjectParameter("hostClub", typeof(string));
    
            var guestClubParameter = guestClub != null ?
                new ObjectParameter("guestClub", guestClub) :
                new ObjectParameter("guestClub", typeof(string));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("startTime", startTime) :
                new ObjectParameter("startTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("purchaseTicket", nationalIDParameter, hostClubParameter, guestClubParameter, startTimeParameter);
        }
    
        public virtual int rejectRequest(string stadMUsername, string hostClub, string guestClub, Nullable<System.DateTime> startTime)
        {
            var stadMUsernameParameter = stadMUsername != null ?
                new ObjectParameter("stadMUsername", stadMUsername) :
                new ObjectParameter("stadMUsername", typeof(string));
    
            var hostClubParameter = hostClub != null ?
                new ObjectParameter("hostClub", hostClub) :
                new ObjectParameter("hostClub", typeof(string));
    
            var guestClubParameter = guestClub != null ?
                new ObjectParameter("guestClub", guestClub) :
                new ObjectParameter("guestClub", typeof(string));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("startTime", startTime) :
                new ObjectParameter("startTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rejectRequest", stadMUsernameParameter, hostClubParameter, guestClubParameter, startTimeParameter);
        }
    
        public virtual int unblockFan(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("unblockFan", idParameter);
        }
    
        public virtual int updateMatchTiming(string hostClub, string guestClub, Nullable<System.DateTime> oldStartTime, Nullable<System.DateTime> newStartTime, Nullable<System.DateTime> newEndTime)
        {
            var hostClubParameter = hostClub != null ?
                new ObjectParameter("hostClub", hostClub) :
                new ObjectParameter("hostClub", typeof(string));
    
            var guestClubParameter = guestClub != null ?
                new ObjectParameter("guestClub", guestClub) :
                new ObjectParameter("guestClub", typeof(string));
    
            var oldStartTimeParameter = oldStartTime.HasValue ?
                new ObjectParameter("oldStartTime", oldStartTime) :
                new ObjectParameter("oldStartTime", typeof(System.DateTime));
    
            var newStartTimeParameter = newStartTime.HasValue ?
                new ObjectParameter("newStartTime", newStartTime) :
                new ObjectParameter("newStartTime", typeof(System.DateTime));
    
            var newEndTimeParameter = newEndTime.HasValue ?
                new ObjectParameter("newEndTime", newEndTime) :
                new ObjectParameter("newEndTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateMatchTiming", hostClubParameter, guestClubParameter, oldStartTimeParameter, newStartTimeParameter, newEndTimeParameter);
        }
    }
}
